{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,iEAUIC,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,gBAAiB,CACjDC,aAAc,MACdC,aAAc,IACdC,SAAU,SAGRC,EAAc,GACdC,EAAO,EACPC,EAAa,GAEjB,EAAAC,EAAAC,WAAcC,KAAKC,QAAQC,KAC3B,IAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,YAAaF,SAASC,cAAc,cACpCE,QAASH,SAASC,cAAc,YAChCG,YAAaJ,SAASC,cAAc,mBAGtC,SAASI,EAAgBC,GACvB,IAAMC,EAASD,EAAIE,KAAI,SAAAC,G,OAAQ,EAAAC,EAAAhB,SAAae,E,IAAOE,KAAK,IACxDb,EAAKK,QAAQS,mBAAmB,YAAaL,E,UAMhCM,I,OAAAA,EAAf5B,EAAAH,EAAA,CAAAG,EAAA6B,GAAAC,MAAA,SAAAC,EAA0BC,G,IAchBC,E,qEAbRD,EAAEE,iBACF5B,EAAO,EAGa,MAFpBD,EAAc2B,EAAEG,cAAcC,YAAYC,MAAMC,QAE1B,C,sBACpBC,EAAAC,OAAOC,KAAK,+B,iCAId5B,EAAKI,YAAYyB,UAAUC,IAAI,aAC/B9B,EAAKM,YAAYuB,UAAUC,IAAI,a,oBAGN,EAAAnC,EAAAC,SAAYJ,EAAaC,G,QAA1C2B,EAAQW,EAAAC,KACdtC,EAAa0B,EAASa,KAAKC,OAEvBd,EAASe,UAAY,GACvBnC,EAAKI,YAAYyB,UAAUO,OAAO,aAElCpC,EAAKI,YAAYyB,UAAUC,IAAI,aAG7BV,EAASe,UAAY,IACvBT,EAAAC,OAAOU,QAAQ,oBAAuCC,OAAnBlB,EAASe,UAAU,aACtDnC,EAAKK,QAAQkC,UAAY,GACzBhC,EAAgBa,EAASa,MACzB/C,EAASsD,UACTxC,EAAKM,YAAYuB,UAAUC,IAAI,aAE/BW,KAGyB,IAAvBrB,EAASe,YACXnC,EAAKK,QAAQkC,UAAY,GACzBrC,SAASC,cAAc,SAASqB,MAAQ,GAExCE,EAAAC,OAAOe,QACL,4EAEF1C,EAAKI,YAAYyB,UAAUC,IAAI,aAC/B9B,EAAKM,YAAYuB,UAAUC,IAAI,c,kDAGjCJ,EAAAC,OAAOe,QAAQ,gCACfxC,SAASC,cAAc,SAASqB,MAAQ,GACxC1B,QAAQC,IAAGgC,EAAAY,I,2DA9CUC,MAAAC,KAAAC,U,UAkDVC,I,OAAAA,EAAf5D,EAAAH,EAAA,CAAAG,EAAA6B,GAAAC,MAAA,SAAAC,I,IAIUE,E,yEAHR3B,GAAQ,E,mBAGiB,EAAAE,EAAAC,SAAYJ,EAAaC,G,OAChDc,GADMa,EAAQW,EAAAC,MACWC,MACzB/C,EAASsD,WACT9C,GAAc0B,EAASa,KAAKC,UAETd,EAASe,YAC1BnC,EAAKI,YAAYyB,UAAUC,IAAI,aAC/B9B,EAAKM,YAAYuB,UAAUO,OAAO,cAEpCY,I,kDAEAtB,EAAAC,OAAOe,QAAQ,gCACfxC,SAASC,cAAc,SAASqB,MAAQ,G,2DAhBhBoB,MAAAC,KAAAC,U,CAoB5B,SAASL,IACPQ,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,U,CAId,SAASJ,IACP,IAAQK,EAAuBnD,SAC5BC,cAAc,YACdmD,kBAAkBC,wBAFbC,OAIRP,OAAOC,SAAS,CACdC,IAAkB,EAAbE,EACLD,SAAU,U,CAvFdpD,EAAKC,KAAKwD,iBAAiB,U,SAGDtC,G,OAAXJ,EAAU6B,MAAAC,KAAAC,U,IAFzB9C,EAAKI,YAAYqD,iBAAiB,S,kBAoDnBV,EAAaH,MAAAC,KAAAC,U","sources":["src/withButton.js"],"sourcesContent":["import './css/styles.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport fetchImages from './js/fetchImg';\nimport cardTemplate from './js/templatas/card-template.hbs';\n// import throttle from 'lodash.throttle';\n\n// const THROTTLE_DELAY = 250;\n\nlet lightbox = new SimpleLightbox('.photo-card a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n  captions: 'true',\n});\n\nlet searchQuery = '';\nlet page = 1;\nlet loadedHits = 0;\n\nfetchImages().then(console.log);\nconst refs = {\n  form: document.querySelector('.search-form'),\n  loadMoreBtn: document.querySelector('.load-more'),\n  gallery: document.querySelector('.gallery'),\n  galleryText: document.querySelector('.gallery__text'),\n};\n\nfunction renderCardImage(arr) {\n  const markup = arr.map(item => cardTemplate(item)).join('');\n  refs.gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nrefs.form.addEventListener('submit', onFormData);\nrefs.loadMoreBtn.addEventListener('click', onLoadMoreBtn);\n\nasync function onFormData(e) {\n  e.preventDefault();\n  page = 1;\n  searchQuery = e.currentTarget.searchQuery.value.trim();\n  // console.log(searchQuery);\n  if (searchQuery === '') {\n    Notify.info('This field cannot be empty!');\n    return;\n  }\n\n  refs.loadMoreBtn.classList.add('is-hidden');\n  refs.galleryText.classList.add('is-hidden');\n\n  try {\n    const response = await fetchImages(searchQuery, page);\n    loadedHits = response.hits.length;\n\n    if (response.totalHits > 40) {\n      refs.loadMoreBtn.classList.remove('is-hidden');\n    } else {\n      refs.loadMoreBtn.classList.add('is-hidden');\n    }\n\n    if (response.totalHits > 0) {\n      Notify.success(`Hooray! We found ${response.totalHits} images.`);\n      refs.gallery.innerHTML = '';\n      renderCardImage(response.hits);\n      lightbox.refresh();\n      refs.galleryText.classList.add('is-hidden');\n\n      onScroll();\n    }\n\n    if (response.totalHits === 0) {\n      refs.gallery.innerHTML = '';\n      document.querySelector('input').value = '';\n\n      Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      refs.loadMoreBtn.classList.add('is-hidden');\n      refs.galleryText.classList.add('is-hidden');\n    }\n  } catch (error) {\n    Notify.failure('Ooops...Something goes wrong');\n    document.querySelector('input').value = '';\n    console.log(error);\n  }\n}\n\nasync function onLoadMoreBtn() {\n  page += 1;\n\n  try {\n    const response = await fetchImages(searchQuery, page);\n    renderCardImage(response.hits);\n    lightbox.refresh();\n    loadedHits += response.hits.length;\n\n    if (loadedHits === response.totalHits) {\n      refs.loadMoreBtn.classList.add('is-hidden');\n      refs.galleryText.classList.remove('is-hidden');\n    }\n    onScrollMore();\n  } catch (error) {\n    Notify.failure('Ooops...Something goes wrong');\n    document.querySelector('input').value = '';\n  }\n}\n\nfunction onScroll() {\n  window.scrollBy({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nfunction onScrollMore() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 3,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$bpxeT","parcelRequire","$a7c2489559e0e5f5$var$lightbox","$parcel$interopDefault","$5IjG7","captionsData","captionDelay","captions","$a7c2489559e0e5f5$var$searchQuery","$a7c2489559e0e5f5$var$page","$a7c2489559e0e5f5$var$loadedHits","$1DGNh","default","then","console","log","$a7c2489559e0e5f5$var$refs","form","document","querySelector","loadMoreBtn","gallery","galleryText","$a7c2489559e0e5f5$var$renderCardImage","arr","markup","map","item","$dPIwi","join","insertAdjacentHTML","$a7c2489559e0e5f5$var$_onFormData","$2TvXO","mark","_callee","e","response","preventDefault","currentTarget","searchQuery","value","trim","$h6c0i","Notify","info","classList","add","_ctx","sent","hits","length","totalHits","remove","success","concat","innerHTML","refresh","$a7c2489559e0e5f5$var$onScroll","failure","t0","apply","this","arguments","$a7c2489559e0e5f5$var$_onLoadMoreBtn","$a7c2489559e0e5f5$var$onScrollMore","window","scrollBy","top","behavior","cardHeight","firstElementChild","getBoundingClientRect","height","addEventListener"],"version":3,"file":"withButton.9dcc1ef3.js.map"}