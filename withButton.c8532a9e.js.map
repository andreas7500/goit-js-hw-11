{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,iEAOIC,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,gBAAiB,CACjDC,aAAc,MACdC,aAAc,IACdC,SAAU,SAGRC,EAAc,GACdC,EAAO,EACPC,EAAa,EAEXC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,YAAaF,SAASC,cAAc,cACpCE,QAASH,SAASC,cAAc,YAChCG,YAAaJ,SAASC,cAAc,kBAGtC,SAASI,EAAgBC,GACvB,IAAMC,EAASD,EAAIE,KAAI,SAAAC,G,OAAQ,EAAAC,EAAAC,SAAaF,E,IAAOG,KAAK,IACxDd,EAAKK,QAAQU,mBAAmB,YAAaN,E,UAMhCO,I,OAAAA,EAAfxB,EAAAH,EAAA,CAAAG,EAAAyB,GAAAC,MAAA,SAAAC,EAA0BC,G,IAgBhBC,E,qEAfRD,EAAEE,iBAEFzB,EAAcuB,EAAEG,cAAcC,YAAYC,MAAMC,OAChD5B,EAAO,EACPE,EAAKK,QAAQsB,UAAY,GAEL,KAAhB9B,EAAkB,C,sBACpB+B,EAAAC,OAAOC,KAAK,+B,iCAId9B,EAAKI,YAAY2B,UAAUC,IAAI,aAC/BhC,EAAKM,YAAYyB,UAAUC,IAAI,a,oBAGN,EAAAC,EAAApB,SAAYhB,EAAaC,G,QAA1CuB,EAAQa,EAAAC,KACdpC,EAAasB,EAASe,KAAKC,OAEvBhB,EAASiB,UAAY,GACvBtC,EAAKI,YAAY2B,UAAUQ,OAAO,aAElCvC,EAAKI,YAAY2B,UAAUC,IAAI,aAG7BX,EAASiB,UAAY,IACvBV,EAAAC,OAAOW,QAAQ,oBAAuCC,OAAnBpB,EAASiB,UAAU,aACtDtC,EAAKK,QAAQsB,UAAY,GACzBpB,EAAgBc,EAASe,MACzB7C,EAASmD,UACT1C,EAAKM,YAAYyB,UAAUC,IAAI,aAE/BW,KAGyB,IAAvBtB,EAASiB,YACXtC,EAAKK,QAAQsB,UAAY,GACzBzB,SAASC,cAAc,SAASsB,MAAQ,GAExCG,EAAAC,OAAOe,QACL,4EAEF5C,EAAKI,YAAY2B,UAAUC,IAAI,aAC/BhC,EAAKM,YAAYyB,UAAUC,IAAI,c,kDAGjCJ,EAAAC,OAAOe,QAAQ,gCAEf/C,EAAYgD,QACZC,QAAQC,IAAGb,EAAAc,I,2DAjDUC,MAAAC,KAAAC,U,UAqDVC,I,OAAAA,EAAf5D,EAAAH,EAAA,CAAAG,EAAAyB,GAAAC,MAAA,SAAAC,I,IAIUE,E,yEAHRvB,GAAQ,E,mBAGiB,EAAAmC,EAAApB,SAAYhB,EAAaC,G,OAChDS,GADMc,EAAQa,EAAAC,MACWC,MACzB7C,EAASmD,WACT3C,GAAcsB,EAASe,KAAKC,UAEThB,EAASiB,YAC1BtC,EAAKI,YAAY2B,UAAUC,IAAI,aAC/BhC,EAAKM,YAAYyB,UAAUQ,OAAO,cAEpCc,I,kDAEAzB,EAAAC,OAAOe,QAAQ,gCACf1C,SAASC,cAAc,SAASsB,MAAQ,G,2DAhBhBwB,MAAAC,KAAAC,U,CAoB5B,SAASR,IACPW,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,U,CAId,SAASJ,IACP,IAAQK,EAAuBxD,SAC5BC,cAAc,YACdwD,kBAAkBC,wBAFbC,OAIRP,OAAOC,SAAS,CACdC,IAAkB,EAAbE,EACLD,SAAU,U,CA1FdzD,EAAKC,KAAK6D,iBAAiB,U,SAGD1C,G,OAAXJ,EAAUiC,MAAAC,KAAAC,U,IAFzBnD,EAAKI,YAAY0D,iBAAiB,S,kBAuDnBV,EAAaH,MAAAC,KAAAC,U","sources":["src/withButton.js"],"sourcesContent":["import './css/styles.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport fetchImages from './js/fetchImg';\nimport cardTemplate from './js/templatas/card-template.hbs';\n\nlet lightbox = new SimpleLightbox('.photo-card a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n  captions: 'true',\n});\n\nlet searchQuery = '';\nlet page = 1;\nlet loadedHits = 0;\n\nconst refs = {\n  form: document.querySelector('.search-form'),\n  loadMoreBtn: document.querySelector('.load-more'),\n  gallery: document.querySelector('.gallery'),\n  galleryText: document.querySelector('.gallery-text'),\n};\n\nfunction renderCardImage(arr) {\n  const markup = arr.map(item => cardTemplate(item)).join('');\n  refs.gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nrefs.form.addEventListener('submit', onFormData);\nrefs.loadMoreBtn.addEventListener('click', onLoadMoreBtn);\n\nasync function onFormData(e) {\n  e.preventDefault();\n\n  searchQuery = e.currentTarget.searchQuery.value.trim();\n  page = 1;\n  refs.gallery.innerHTML = '';\n\n  if (searchQuery === '') {\n    Notify.info('This field cannot be empty!');\n    return;\n  }\n\n  refs.loadMoreBtn.classList.add('is-hidden');\n  refs.galleryText.classList.add('is-hidden');\n\n  try {\n    const response = await fetchImages(searchQuery, page);\n    loadedHits = response.hits.length;\n\n    if (response.totalHits > 40) {\n      refs.loadMoreBtn.classList.remove('is-hidden');\n    } else {\n      refs.loadMoreBtn.classList.add('is-hidden');\n    }\n\n    if (response.totalHits > 0) {\n      Notify.success(`Hooray! We found ${response.totalHits} images.`);\n      refs.gallery.innerHTML = '';\n      renderCardImage(response.hits);\n      lightbox.refresh();\n      refs.galleryText.classList.add('is-hidden');\n\n      onScroll();\n    }\n\n    if (response.totalHits === 0) {\n      refs.gallery.innerHTML = '';\n      document.querySelector('input').value = '';\n\n      Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      refs.loadMoreBtn.classList.add('is-hidden');\n      refs.galleryText.classList.add('is-hidden');\n    }\n  } catch (error) {\n    Notify.failure('Ooops...Something goes wrong');\n\n    searchQuery.reset();\n    console.log(error);\n  }\n}\n\nasync function onLoadMoreBtn() {\n  page += 1;\n\n  try {\n    const response = await fetchImages(searchQuery, page);\n    renderCardImage(response.hits);\n    lightbox.refresh();\n    loadedHits += response.hits.length;\n\n    if (loadedHits === response.totalHits) {\n      refs.loadMoreBtn.classList.add('is-hidden');\n      refs.galleryText.classList.remove('is-hidden');\n    }\n    onScrollMore();\n  } catch (error) {\n    Notify.failure('Ooops...Something goes wrong');\n    document.querySelector('input').value = '';\n  }\n}\n\nfunction onScroll() {\n  window.scrollBy({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nfunction onScrollMore() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 3,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$bpxeT","parcelRequire","$a7c2489559e0e5f5$var$lightbox","$parcel$interopDefault","$5IjG7","captionsData","captionDelay","captions","$a7c2489559e0e5f5$var$searchQuery","$a7c2489559e0e5f5$var$page","$a7c2489559e0e5f5$var$loadedHits","$a7c2489559e0e5f5$var$refs","form","document","querySelector","loadMoreBtn","gallery","galleryText","$a7c2489559e0e5f5$var$renderCardImage","arr","markup","map","item","$dPIwi","default","join","insertAdjacentHTML","$a7c2489559e0e5f5$var$_onFormData","$2TvXO","mark","_callee","e","response","preventDefault","currentTarget","searchQuery","value","trim","innerHTML","$h6c0i","Notify","info","classList","add","$1DGNh","_ctx","sent","hits","length","totalHits","remove","success","concat","refresh","$a7c2489559e0e5f5$var$onScroll","failure","reset","console","log","t0","apply","this","arguments","$a7c2489559e0e5f5$var$_onLoadMoreBtn","$a7c2489559e0e5f5$var$onScrollMore","window","scrollBy","top","behavior","cardHeight","firstElementChild","getBoundingClientRect","height","addEventListener"],"version":3,"file":"withButton.c8532a9e.js.map"}